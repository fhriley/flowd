* indicated things to do before 1.0 release

- Per-peer statistics, esp. errors
  - Does this make sense?

- Port predicates, e.g. "port 1024-65536"

- Improve log handling
 - E.g. multiple log files, based on tag?
 - support relaying of pre/post-filter packets to another agent (via UDP)

- Instead of reading/writing flow logs, store.c functions should format them
 to memory buffers (e.g. so they can be sent over the network) *

- Add python docs and help *

- Write "flow-filter", a small program to filter and/or re-tag on-disk flows 
  (reuse or share parse.y filtering code)

- Write "flow-send", a small program to take on-disk flows and send them as 
  NetFlow packets to a chosen host

- NetFlow v.7, v.9, sflow, IPFIX

- Speed up perl and python modules
  - CRC is especially slow
  - Making these clients of the C library would be best, but the C library 
    needs to be modified to work with Python at least (it uses FILE * for
    file objects)
  - A Python implementation of our CRC code would be easy

- Add writing of binary flows to perl and python modules *

- Add calculation and storage of "normalised" flow timers, correcting for 
  flow probe clock errors by using difference between header->time_sec and 
  localtime (assumes flow collector clock is accurate!)

- Track sequence per peer and alert on flow drops
